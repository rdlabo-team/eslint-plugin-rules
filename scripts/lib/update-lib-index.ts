import { writeFileSync } from 'fs';
import { resolve } from 'path';
import { ESLint } from 'eslint';
import { rules } from './rules';

const filePath = resolve(__dirname, '../../src/index.ts');
const rawContent = `/* DON'T EDIT THIS FILE. This is generated by 'scripts/lib/update-lib-index.ts' */

import recommended from './configs/recommended';
${rules.map((rule) => `import ${rule.name.replace(/-/g, '')} from './rules/${rule.name}';`).join('\n')}

export = {
  configs: {
    recommended,
  },
  rules: {
    ${rules.map((rule) => `"${rule.name}": ${rule.name.replace(/-/g, '')}`).join(',\n    ')}
  },
};
`;
const engine = new ESLint({ fix: true });
engine.lintText(rawContent, { filePath }).then((lintResult) => {
  const content = lintResult[0].output || rawContent;
  writeFileSync(filePath, content);
});
